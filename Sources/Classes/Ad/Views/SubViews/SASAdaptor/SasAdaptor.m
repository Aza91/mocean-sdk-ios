////  SasView.m//  AdMobileSDK////  Created by Slava on 4/12/11.//#import "SasAdaptor.h"@implementation SasAdaptor#ifdef INCLUDE_SAS-(SmartAdServerViewFormat)getSasViewFormat:(CGRect)aFrame{	/*	 typedef enum {	 SmartAdServerViewFormatIntersticielStart,			//	320x460	Full screen ad for a screen with statusbar without navBar either tabBar and Default.png during the downloadind delay	 SmartAdServerViewFormatIntersticiel,				//	320x460	Full screen ad for a screen with statusbar without navBar either tabBar	 SmartAdServerViewFormatIntersticielNavBar,			//	320x416	Full screen ad for a screen with statusbar with navBar and without tabBar	 SmartAdServerViewFormatIntersticielTabBar,			//	320x411	Full screen ad for a screen with statusbar without navBar and with tabBar	 SmartAdServerViewFormatIntersticielNavBarTabBar,	//	320x367	Full screen ad for a screen with statusbar with navBar and tabBar	 SmartAdServerViewFormatBanner,						//	320x50/20	Banner ad. This type of ad will not	 	 // iPad	 SmartAdServerViewFormatIntersticieliPadStart,			//	768x1024	Full screen ad for a screen with statusbar without navBar either tabBar and Default.png during the downloadind delay	 SmartAdServerViewFormatIntersticieliPad,				//	768x1024	Full screen ad for a screen with statusbar without navBar either tabBar	 SmartAdServerViewFormatIntersticielNavBariPad,			//	768x960	Full screen ad for a screen with statusbar with navBar and without tabBar	 SmartAdServerViewFormatIntersticielTabBariPad,			//	768x955	Full screen ad for a screen with statusbar without navBar and with tabBar	 SmartAdServerViewFormatIntersticielNavBarTabBariPad,	//	768x911	Full screen ad for a screen with statusbar with navBar and tabBar	 SmartAdServerViewFormatBanneriPad,						//	768x90/20	Banner ad. This type of ad will not	 } SmartAdServerViewFormat;	 */		NSInteger bannerWidth = aFrame.size.width;	NSInteger bannerHeight = aFrame.size.height; 	if (bannerWidth == 320)	{		if ( bannerHeight <= 50 )		{			return SmartAdServerViewFormatBanner;		}		else if ( bannerHeight <=367 ) {			return SmartAdServerViewFormatIntersticielNavBarTabBar;		}		else if ( bannerHeight <= 411 ) {			return SmartAdServerViewFormatIntersticielTabBar;		}		else if ( bannerHeight <= 416 ) {			return SmartAdServerViewFormatIntersticielNavBar;		}		else if ( bannerHeight <= 460 ) {			return SmartAdServerViewFormatIntersticiel;		}	}	else if (bannerWidth == 768)	{		if ( bannerHeight <= 90 ) {			return SmartAdServerViewFormatBanneriPad;		}		else if ( bannerHeight <= 911 ) {			return SmartAdServerViewFormatIntersticielNavBarTabBariPad;		}		else if ( bannerHeight <= 955 ) {			return SmartAdServerViewFormatIntersticielTabBariPad;		}		else if ( bannerHeight <= 960 ) {			return SmartAdServerViewFormatIntersticielNavBariPad;		}		else if ( bannerHeight <= 1024 ) {			return SmartAdServerViewFormatIntersticieliPad;		}	}	return SmartAdServerViewFormatBanner;}#endif#pragma mark -#pragma mark SasView lifecycle- (id)initWithFrame:(CGRect)frame{	self = [super initWithFrame:frame];    if (self)	{#ifdef INCLUDE_SAS		_format = [self getSasViewFormat:frame];        _sasUIViewControllerAdaptor = [SASUIViewControllerAdaptor new];#endif    }    return self;}- (void)dealloc{#ifdef INCLUDE_SAS    [_smartAdServerView setDelegate:nil];	[_smartAdServerView release];    _sasUIViewControllerAdaptor.adView = nil;    [_sasUIViewControllerAdaptor release];#endif    [super dealloc];}-(void)showWithSiteId:(NSString*)siteId pageId:(NSString*)pageId formatId:(NSString*)formatId{#ifdef INCLUDE_SAS		/*	 siteID: ID of the application (you have set up in Smart AdServer Administration)	 pageID: ID of the application screen (you have set up in Smart AdServer Administration)	 formatID: ID of the ad format (you have set up in Smart AdServer Administration)	 master:	 M: for the first ad call in the application screen	 S: for all other ad calls in the application screen target: free variable that can be used for ad targeting (can be blank by default)	 target: free variable that can be used for ad targeting (can be blank by default)	 	 Test IDs for iPhone: siteID/pageID/formatID	 iPhone - classic banner with landscape: 19436/136976/8468	 iPhone - classic banner without landscape: 19436/136976/8469	 iPhone - expand banner with landscape: 19436/136977/8468	 iPhone - expand banner without landscape: 19436/136977/8469	 iPhone - interstitial with landscape: 19436/136978/8468	 iPhone - interstitial without landscape: 19436/136978/8469	 iPhone - video: 19436/136979/8468	 	 Test IDs for iPad: siteID/pageID/formatID	 iPad - classic banner with landscape: 19436/136971/8468	 iPad - classic banner without landscape: 19436/136971/8469	 iPad - expand banner with landscape: 19436/136972/8468	 iPad - expand banner without landscape: 19436/136972/8469	 iPad - interstitial with landscape: 19436/136973/8468	 iPad - interstitial without landscape: 19436/136973/8469	 iPad - video: 19436/136974/8468	 */	[SmartAdServerView setSiteID:[siteId intValue]];        _sasUIViewControllerAdaptor.adView = self;	_smartAdServerView = [[SmartAdServerView alloc] initWithFrame:CGRectMake(0, 0, self.frame.size.width, self.frame.size.height) loader:SmartAdServerViewLoaderActivityIndicatorStyleTransparent hideStatusBar:NO];	[_smartAdServerView setDelegate:_sasUIViewControllerAdaptor];        [_smartAdServerView loadFormatId:[formatId intValue] pageId:pageId master:NO target:nil];        [self addSubview:_smartAdServerView];	_startCount++;#endif}@end