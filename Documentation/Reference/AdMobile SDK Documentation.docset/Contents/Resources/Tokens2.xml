<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AdView.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AdView</TokenIdentifier>
			<Abstract>You use the AdView class to embed advertisement content in your application. To do so, you simply create an AdView object and add it to a UIView. An instance of AdView (or simply, an ad) is a means for displaying advertisement information from ad publisher site. To choose ad publisher site set parameters in the ad initialization method initWithFrame:site:zone: or use the properties site and zone. Use the adServerUrl property to choose ad publisher server.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AdView/initWithFrame:site:zone:</TokenIdentifier>
			<Abstract>Initializes and returns an AdView object having the given frame, site and zone.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>- (id)initWithFrame:(CGRect)frame site:(NSInteger)site zone:(NSInteger)zone</Declaration>
			<Parameters>
				<Parameter>
					<Name>frame</Name>
					<Abstract>A rectangle specifying the initial location and size of the ad view in its superview's coordinates.</Abstract>
				</Parameter><Parameter>
					<Name>site</Name>
					<Abstract>A value that specifies the id of ad publisher site.</Abstract>
				</Parameter><Parameter>
					<Name>zone</Name>
					<Abstract>A value that specifies the id of ad publisher zone.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>Returns an initialized AdView object or nil if the object could not be successfully initialized.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithFrame:site:zone:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AdView/stopEverythingAndNotfiyDelegateOnCleanup</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>- (void)stopEverythingAndNotfiyDelegateOnCleanup</Declaration>
			
			
			<Anchor>//api/name/stopEverythingAndNotfiyDelegateOnCleanup</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/site</TokenIdentifier>
			<Abstract>Id of the publisher site.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (assign) NSInteger site</Declaration>
			
			
			<Anchor>//api/name/site</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/zone</TokenIdentifier>
			<Abstract>Id of the publisher zone.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (assign) NSInteger zone</Declaration>
			
			
			<Anchor>//api/name/zone</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/adServerUrl</TokenIdentifier>
			<Abstract>Publisher server url.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *adServerUrl</Declaration>
			
			
			<Anchor>//api/name/adServerUrl</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/timeout</TokenIdentifier>
			<Abstract>Maximum server response time.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (assign) NSInteger timeout</Declaration>
			
			
			<Anchor>//api/name/timeout</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/defaultImage</TokenIdentifier>
			<Abstract>Image for unloaded ad state.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) UIImage *defaultImage</Declaration>
			
			
			<Anchor>//api/name/defaultImage</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/animateMode</TokenIdentifier>
			<Abstract>A Boolean value that determines whether ad animate mode is enabled.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property BOOL animateMode</Declaration>
			
			
			<Anchor>//api/name/animateMode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/closeButton</TokenIdentifier>
			<Abstract>Close button.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) UIButton *closeButton</Declaration>
			
			
			<Anchor>//api/name/closeButton</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/contentAlignment</TokenIdentifier>
			<Abstract>A Boolean value that determines whether content alingment center vertically and horizontally.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property BOOL contentAlignment</Declaration>
			
			
			<Anchor>//api/name/contentAlignment</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/internalOpenMode</TokenIdentifier>
			<Abstract>A Boolean value that determines whether ad internal browser is enabled.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property BOOL internalOpenMode</Declaration>
			
			
			<Anchor>//api/name/internalOpenMode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/track</TokenIdentifier>
			<Abstract>A Boolean value that determines whether ad track is enabled.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property BOOL track</Declaration>
			
			
			<Anchor>//api/name/track</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/textColor</TokenIdentifier>
			<Abstract>Color of ad text links.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) UIColor *textColor</Declaration>
			
			
			<Anchor>//api/name/textColor</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/isLoading</TokenIdentifier>
			<Abstract>A Boolean value that determines whether ad is in the process of loading.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (readonly) BOOL isLoading</Declaration>
			
			
			<Anchor>//api/name/isLoading</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/updateTimeInterval</TokenIdentifier>
			<Abstract>Update time interval, in seconds.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property NSTimeInterval updateTimeInterval</Declaration>
			
			
			<Anchor>//api/name/updateTimeInterval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AdView/update</TokenIdentifier>
			<Abstract>Starts to update the ad content immediately.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>- (void)update</Declaration>
			
			
			<Anchor>//api/name/update</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/contentSize</TokenIdentifier>
			<Abstract>Size of the ad content to be shown.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (readonly) CGSize contentSize</Declaration>
			
			
			<Anchor>//api/name/contentSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/premium</TokenIdentifier>
			<Abstract>Ad premium filter.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property AdPremium premium</Declaration>
			
			
			<Anchor>//api/name/premium</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/type</TokenIdentifier>
			<Abstract>Ad type filter.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property AdType type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/keywords</TokenIdentifier>
			<Abstract>Keywords for search ads.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *keywords</Declaration>
			
			
			<Anchor>//api/name/keywords</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/minSize</TokenIdentifier>
			<Abstract>Minimal size of the ad content to be shown.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property CGSize minSize</Declaration>
			
			
			<Anchor>//api/name/minSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/maxSize</TokenIdentifier>
			<Abstract>Maximal size of the ad content to be shown.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property CGSize maxSize</Declaration>
			
			
			<Anchor>//api/name/maxSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/additionalParameters</TokenIdentifier>
			<Abstract>Custom request parameters.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSDictionary *additionalParameters</Declaration>
			
			
			<Anchor>//api/name/additionalParameters</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/latitude</TokenIdentifier>
			<Abstract>User location latitude value.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *latitude</Declaration>
			
			
			<Anchor>//api/name/latitude</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/longitude</TokenIdentifier>
			<Abstract>User location longitude value.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *longitude</Declaration>
			
			
			<Anchor>//api/name/longitude</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/country</TokenIdentifier>
			<Abstract>Country of visitor. It overrides country detected by IP. It is ISO 3166 to be used for specifying country code.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *country</Declaration>
			
			
			<Anchor>//api/name/country</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/region</TokenIdentifier>
			<Abstract>Region of visitor. ISO 3166-2 is used for United States and Canada and FIBS 10-4 is used for other countries.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *region</Declaration>
			
			
			<Anchor>//api/name/region</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/city</TokenIdentifier>
			<Abstract>City of the device user (with state). For US only.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *city</Declaration>
			
			
			<Anchor>//api/name/city</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/area</TokenIdentifier>
			<Abstract>Area code of a user. For US only.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *area</Declaration>
			
			
			<Anchor>//api/name/area</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/metro</TokenIdentifier>
			<Abstract>Metro code of a user. For US only.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *metro</Declaration>
			
			
			<Anchor>//api/name/metro</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/zip</TokenIdentifier>
			<Abstract>Zip/Postal code of user (note: parameter is all caps). For US only.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *zip</Declaration>
			
			
			<Anchor>//api/name/zip</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/carrier</TokenIdentifier>
			<Abstract>User carrier.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *carrier</Declaration>
			
			
			<Anchor>//api/name/carrier</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/advertiserId</TokenIdentifier>
			<Abstract>Id of the advertiser for install notification.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (assign) NSInteger advertiserId</Declaration>
			
			
			<Anchor>//api/name/advertiserId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/groupCode</TokenIdentifier>
			<Abstract>Group code for install notification.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSString *groupCode</Declaration>
			
			
			<Anchor>//api/name/groupCode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/testMode</TokenIdentifier>
			<Abstract>A Boolean value that determines whether ads test mode is enabled.
Setting the value of this property to YES enables ads test mode and setting it to NO disables ads test mode.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property BOOL testMode</Declaration>
			
			
			<Anchor>//api/name/testMode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/logMode</TokenIdentifier>
			<Abstract>AdLogMode value that determines log level.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
			<Declaration>@property AdLogMode logMode</Declaration>
			
			
			<Anchor>//api/name/logMode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AdView/delegate</TokenIdentifier>
			<Abstract>The receiver's delegate.</Abstract>
			<DeclaredIn>MASTAdView.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/AdView/delegate</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (assign) id&lt;AdViewDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
	</File>
</Tokens>